version: '3'

networks:
  local:
  internalProxy:
    external:
      name: internalProxy

services:
  django:
    &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: gfbio_dmpt_production_django
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    networks:
      - local
      - internalProxy
    volumes:
      - ./web-test-data.json:/app/web-test-data.json
    labels:
      - traefik.enable=true
      - traefik.http.routers.BRANCH-django.rule=Host(`BRANCH.test.gfbio.dev`)
      - traefik.http.routers.BRANCH-django.entrypoints=web
      - traefik.http.services.BRANCH-django.loadbalancer.server.port=5000
    command: /ci_start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: gfbio_dmpt_production_postgres
    env_file:
      - ./.envs/.production/.postgres
    networks:
      - local

  redis:
    image: redis:5.0
    networks:
      - local

  celeryworker:
    <<: *django
    image: gfbio_dmpt_production_celeryworker
    command: /start-celeryworker
    networks:
      - local
    labels:
      - foo

  celerybeat:
    <<: *django
    image: gfbio_dmpt_production_celerybeat
    command: /start-celerybeat
    networks:
      - local
    labels:
      - foo

  flower:
    <<: *django
    image: gfbio_dmpt_production_flower
    command: /start-flower
    networks:
      - local
    labels:
      - foo
